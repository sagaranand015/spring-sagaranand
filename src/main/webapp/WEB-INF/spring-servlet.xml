<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
 	http://www.springframework.org/schema/mvc
 	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
 	http://www.springframework.org/schema/context
 	http://www.springframework.org/schema/context/spring-context-4.0.xsd
 	http://www.springframework.org/schema/tx 
 	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.sagaranand.website.controllers" />

	<mvc:annotation-driven />

	<import resource="/applicationContext.xml" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix">
			<value>/WEB-INF/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/css/**" location="/WEB-INF/../libraries/css/" />
	<mvc:resources mapping="/scripts/**" location="/WEB-INF/../libraries/js/" />
	<mvc:resources mapping="/images/**" location="/WEB-INF/../libraries/images/" />
	<mvc:resources mapping="/htmls/**" location="/WEB-INF/../htmls/" />
	<mvc:resources mapping="/**" location="/" />

	<bean id="springController"
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sagaranand_db" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.sagaranand.website.model.Admin</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="dao" class="com.sagaranand.website.dao.DaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="adminService" class="com.sagaranand.website.services.AdminServiceImpl">
		<property name="dao" ref="dao"></property>
	</bean>

	<context:component-scan base-package="com.sagaranand.website.*" />
	<context:component-scan base-package="com.sagaranand.website.controllers" />
	<context:component-scan base-package="com.sagaranand.website.client" />
	<context:component-scan base-package="com.sagaranand.website.core" />
	<context:component-scan base-package="com.sagaranand.website.services" />
	<context:component-scan base-package="com.sagaranand.website.dao" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" /> 
		</bean> -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
</beans>