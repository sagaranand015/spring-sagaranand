<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
 	http://www.springframework.org/schema/mvc
 	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
 	http://www.springframework.org/schema/context
 	http://www.springframework.org/schema/context/spring-context-4.0.xsd
 	http://www.springframework.org/schema/tx 
 	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
 	http://www.springframework.org/schema/security 
 	http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.sagaranand.website.*" />
	<context:annotation-config />

	<mvc:annotation-driven />

	<!-- Loading the root applicationContext. The .properties file within applicationContext.xml 
		file will load all the required external properties -->
	<import resource="/applicationContext.xml" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix">
			<value>/WEB-INF/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/libraries/**" location="/WEB-INF/../libraries/" />
	<mvc:resources mapping="/**" location="/" />

	<bean id="springController"
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${app.db.driver}" />
		<property name="url" value="${app.db.url}" />
		<property name="username" value="${app.db.username}" />
		<property name="password" value="${app.db.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.sagaranand.website.orm.Admin</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${app.hibernate.dialect}</prop>
			</props>
		</property>
	</bean>

	<!-- This is dependency injection using setProp() function in the Respective 
		classes for AdminDao -->
	<bean id="dao" class="com.sagaranand.website.dao.DaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="daoService" class="com.sagaranand.website.services.DaoServiceImpl">
		<property name="dao" ref="dao"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- This is only for testing -->
	<security:http pattern="/addAdmin" security="none" />

	<!-- For the main index pages that do not need security configurations -->
	<security:http pattern="/" security="none" />
	<security:http pattern="/home" security="none" />

	<!-- this is for the static resources -->
	<security:http pattern="/libraries/**" security="none" />

	<security:http auto-config="true">

		<!-- This is required for CSRF protection in the ng-inclue pages and AJAX 
			Calls -->
		<security:intercept-url pattern="/*.jsp"
			access="permitAll" />

		<security:intercept-url pattern="/sendContactMail"
			access="permitAll" />
		<security:intercept-url pattern="/register"
			access="permitAll" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/register"
			access="permitAll" />
		<security:intercept-url pattern="/register-submit"
			access="permitAll" />

		<security:intercept-url pattern="/admin"
			access="hasRole('ROLE_ADMIN')" />

		<security:form-login login-page="/login"
			username-parameter="txt-username" password-parameter="txt-password"
			authentication-failure-url="/login?valid=false"
			authentication-success-handler-ref="authSuccessHandler"
			default-target-url="/admin" />

		<security:csrf token-repository-ref="csrfTokenRepository" />

		<security:access-denied-handler
			error-page="/403" />

		<security:logout logout-url="/logout" delete-cookies="JSESSIONID"
			invalidate-session="false" success-handler-ref="logoutSuccessHandler" />

		<security:session-management
			invalid-session-url="/login?session=false"
			session-authentication-error-url="/login?session=false"
			session-fixation-protection="migrateSession">
			<security:concurrency-control
				max-sessions="2" expired-url="/login?session=false" />
		</security:session-management>

	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			ref="loginAuthProvider">
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="loginAuthProvider" class="com.sagaranand.website.providers.LoginAuthProvider">
		<property name="daoService" ref="daoService"></property>
	</bean>

	<bean id="authSuccessHandler" class="com.sagaranand.website.handlers.AuthSuccessHandler">
		<property name="daoService" ref="daoService"></property>
	</bean>

	<bean id="logoutSuccessHandler" class="com.sagaranand.website.handlers.LogoutSuccessHandler">
		<property name="daoService" ref="daoService"></property>
	</bean>

	<bean id="csrfTokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		<property name="headerName" value="X-XSRF-TOKEN" />
	</bean>


</beans>